import 'package:flutter/material.dart';
import 'package:scheme_package/scheme_package.dart';
import 'package:provider/provider.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import '../../common/locator/locator.dart';
import 'app_theme.dart';
import 'model/scheme_theme.dart';
import 'model/theme_model.dart';

class SchemeThemeBuilder extends StatelessWidget {
	final SchemeTheme theme = locator<SchemeTheme>();
	final Widget Function(BuildContext context, ThemeModel model, Widget child) builder;
	SchemeThemeBuilder({Key key, this.builder}) : super(key: key);

	@override
	Widget build(BuildContext context) {
		return MultiProvider(
				providers: [themeStream ],
				child: Material(
					color: Colors.transparent,
					child: Consumer<ThemeModel>(builder:(context,model,child) {

						if(model == null) return LoadingView(color: AppTheme.themeColor);
						theme.model = model;
						theme.initScheme();
						return builder(context,model,child);
					}),
				));
	}
}


get themeStream => StreamProvider.value(
		value: Firestore.instance
				.collection('Theme')
				.document('theme')
				.snapshots()
				.map((event) => ThemeModel.fromJson(event.data)));